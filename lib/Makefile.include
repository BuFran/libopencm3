##
## This file is part of the libopencm3 project.
##
## Copyright (C) 2009 Uwe Hermann <uwe@hermann-uwe.de>
## Copyright (C) 2012 Piotr Esden-Tempski <piotr@esden.net>
##
## This library is free software: you can redistribute it and/or modify
## it under the terms of the GNU Lesser General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This library is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public License
## along with this library.  If not, see <http://www.gnu.org/licenses/>.
##

# Be silent per default, but 'make V=1' will show all compiler calls.
ifneq ($(V),1)
Q := @
endif

# define all macros for GCC toolchain
include $(SRCLIBDIR)/../mk/gcc-config.mk

###############################################################################
# Common variables for all architectures

OPTIMIZATIONS	?= -Os -g

###############################################################################
# C flags
CFLAGS		+= $(OPTIMIZATIONS)
CFLAGS		+= -Wextra -Wshadow -Wimplicit-function-declaration
CFLAGS		+= -Wredundant-decls -Wmissing-prototypes -Wstrict-prototypes
CFLAGS		+= -fno-common -ffunction-sections -fdata-sections

###############################################################################
# C & C++ preprocessor common flags
CPPFLAGS	+= -MD
CPPFLAGS	+= -Wall -Wundef
CPPFLAGS	+= $(DEFS)
CPPFLAGS	+= -I$(SRCLIBDIR)/../include

###############################################################################
# Archiver flags
ARFLAGS		= rcs
#ARFLAGS	= rcsv

# common objects
OBJS += vector.o systick.o scb.o nvic.o assert.o sync.o dwt.o

all: $(SRCLIBDIR)/$(LIBNAME).a $(SRCLIBDIR)/$(LIBNAME).ld

$(SRCLIBDIR)/$(LIBNAME).a: $(OBJS)
	@printf "  AR      $(@F)\n"
	$(Q)$(AR) $(ARFLAGS) $@ $(OBJS)

$(SRCLIBDIR)/$(LIBNAME).ld: $(LIBNAME).ld
	@printf "  CP      $(@F)\n"
	$(Q)cp $^ $@
	$(Q)if [ -f $(LIBNAME)_rom_to_ram.ld ]; then cp $(LIBNAME)_rom_to_ram.ld $(SRCLIBDIR); fi

include $(SRCLIBDIR)/../mk/gcc-rules.mk

clean:
	$(Q)rm -f *.o *.d ../*.o ../*.d
	$(Q)rm -f $(SRCLIBDIR)/$(LIBNAME).a
	$(Q)rm -f $(SRCLIBDIR)/$(LIBNAME).ld
	$(Q)rm -f $(SRCLIBDIR)/$(LIBNAME)_rom_to_ram.ld

.PHONY: clean

-include $(OBJS:.o=.d)
